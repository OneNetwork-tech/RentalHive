@page "/"
@using RentalHive.Application.DTOs.RentalItem
@using System.Net.Http.Json
@inject HttpClient Http
@inherits LayoutComponentBase
 


<div class="bg-gray-50 text-gray-800">

    <!-- Hero Section -->
    <div class="relative bg-gray-800 text-white">
        <div class="absolute inset-0">
            <img src="https://images.unsplash.com/photo-1568605117036-5fe5e7167b4f?q=80&w=2070&auto=format&fit=crop"
                 alt="Modern car"
                 class="w-full h-full object-cover opacity-40">
        </div>
        <div class="relative container mx-auto px-4 py-24 md:py-32 text-center">
            <h1 class="text-4xl md:text-6xl font-bold leading-tight mb-4">Rent Anything, Anytime</h1>
            <p class="text-lg md:text-xl text-gray-300 mb-8">The best platform to rent cars, boats, and machinery with ease and confidence.</p>

            <!-- Search Bar -->
            <div class="max-w-4xl mx-auto bg-white p-4 rounded-lg shadow-2xl flex flex-col md:flex-row items-center gap-4 text-gray-600">
                <div class="flex-grow w-full flex items-center border-b md:border-b-0 md:border-r border-gray-200 p-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" /></svg>
                    <input type="text" placeholder="What are you looking for? (e.g., 'Van')" class="w-full focus:outline-none">
                </div>
                <div class="flex-grow w-full flex items-center border-b md:border-b-0 md:border-r border-gray-200 p-2">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-indigo-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" /></svg>
                    <input type="text" placeholder="Location (e.g., 'Stockholm')" class="w-full focus:outline-none">
                </div>
                <button class="w-full md:w-auto bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-3 px-8 rounded-lg transition duration-300">
                    Search
                </button>
            </div>
        </div>
    </div>

    <!-- Categories Section -->
    <div class="py-16">
        <div class="container mx-auto px-4 text-center">
            <h2 class="text-3xl font-bold mb-2">Explore Our Categories</h2>
            <p class="text-gray-600 mb-12">Find the perfect rental for any job or adventure.</p>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <!-- Category Card: Cars -->
                <div class="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300">
                    <div class="bg-indigo-100 text-indigo-600 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17l-5-5 1.41-1.42L9 14.17l7.59-7.59L18 8l-9 9z" transform="scale(1.2) translate(-2, -2)"></path><path d="M12 2L3 7v10l9 5 9-5V7l-9-5z"></path><path d="M3 7l9 5 9-5"></path><path d="M12 12v10"></path></svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Cars & Vans</h3>
                    <p class="text-gray-600">From compact cars for city trips to spacious vans for moving day.</p>
                </div>
                <!-- Category Card: Boats -->
                <div class="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300">
                    <div class="bg-teal-100 text-teal-600 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.5 16.5A2.5 2.5 0 0 1 3 14V6a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v8a2.5 2.5 0 0 1-2.5 2.5H18a2.5 2.5 0 0 0-2.5 2.5v0A2.5 2.5 0 0 1 13 21.5h-2a2.5 2.5 0 0 1-2.5-2.5v0A2.5 2.5 0 0 0 6 16.5Z"></path><path d="M22 11.5H2"></path></svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Boats</h3>
                    <p class="text-gray-600">Set sail on the beautiful Swedish coast with our selection of boats.</p>
                </div>
                <!-- Category Card: Machines -->
                <div class="bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-shadow duration-300">
                    <div class="bg-amber-100 text-amber-600 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.3 2.2c.2-.3.5-.4.8-.4s.6.1.8.4l1.6 2.4c.2.3.5.5.9.5h2.8c.4 0 .8.2 1 .5s.3.6.3 1l-1.8 8.1c-.1.5-.5.8-1 .8H5.2c-.5 0-.9-.3-1-.8L2.4 7c0-.4.1-.7.3-1s.6-.5 1-.5h2.8c.4 0 .7-.2.9-.5l1.6-2.4Z"></path><path d="M12 16h-2a2 2 0 1 0 0 4h2"></path><path d="m18 16 2 4"></path><path d="m6 16-2 4"></path></svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Machinery</h3>
                    <p class="text-gray-600">Heavy-duty machinery and tools for your construction projects.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Featured Listings Section -->
    <div class="bg-gray-100 py-16">
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold text-center mb-12">Featured Rentals</h2>

            @if (isLoading)
            {
                <p class="text-center text-gray-600"><em>Loading featured rentals...</em></p>
            }
            else if (!string.IsNullOrEmpty(errorMessage))
            {
                <p class="text-center text-red-600"><em>@errorMessage</em></p>
            }
            else
            {
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    @foreach (var car in featuredCars)
                    {
                        <div class="bg-white rounded-lg shadow-lg overflow-hidden transform hover:-translate-y-2 transition-transform duration-300">
                            <img src="https://placehold.co/600x400/334155/ffffff?text=@(Uri.EscapeDataString(car.Name))" alt="@car.Name" class="w-full h-56 object-cover">
                            <div class="p-6">
                                <h3 class="text-xl font-bold mb-2">@car.Name</h3>
                                <p class="text-gray-600 mb-4 truncate">@car.Description</p>
                                <div class="flex justify-between items-center">
                                    <p class="text-lg font-bold text-indigo-600">@car.DailyRate.ToString("C", new System.Globalization.CultureInfo("sv-SE"))/day</p>
                                    <a href="/details/@car.Id" class="bg-indigo-100 text-indigo-700 px-4 py-2 rounded-full font-semibold text-sm hover:bg-indigo-200 transition">View Details</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>

</div>

@code {
    private List<CarDto> featuredCars = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // IMPORTANT: Replace '7123' with the actual port number your RentalHive.Api project is running on.
            // You can find this in the RentalHive.Api/Properties/launchSettings.json file.
            var apiUrl = "http://localhost:7123/api/Cars";

            featuredCars = await Http.GetFromJsonAsync<List<CarDto>>(apiUrl) ?? new List<CarDto>();
        }
        catch (HttpRequestException ex)
        {
            // Handle network errors (e.g., API is not running)
            errorMessage = $"Error fetching data: Could not connect to the API. Please ensure the backend is running. ({ex.Message})";
        }
        catch (Exception ex)
        {
            // Handle other errors (e.g., JSON deserialization)
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
}


@page "/login"
@using RentalHive.Application.DTOs.User
@using RentalHive.Web.Services
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<div class="flex items-center justify-center min-h-[80vh] bg-gray-50 px-4">
    <div class="max-w-md w-full bg-white p-8 rounded-xl shadow-lg">
        <div class="text-center mb-8">
            <h2 class="text-3xl font-bold text-gray-900">Welcome Back</h2>
            <p class="text-gray-600 mt-2">Log in to your RentalHive account.</p>
        </div>

        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <div class="space-y-6">
                <div>
                    <label for="loginIdentifier" class="block text-sm font-medium text-gray-700">Email, Personnummer, or Phone</label>
                    <InputText id="loginIdentifier" @bind-Value="loginModel.LoginIdentifier" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                    <ValidationMessage For="@(() => loginModel.LoginIdentifier)" class="text-red-600 text-sm mt-1" />
                </div>
                <div>
                    <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                    <InputText type="password" id="password" @bind-Value="loginModel.Password" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                    <ValidationMessage For="@(() => loginModel.Password)" class="text-red-600 text-sm mt-1" />
                </div>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md" role="alert">
                        <p>@errorMessage</p>
                    </div>
                }
                <button type="submit" disabled="@isSubmitting" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:bg-indigo-400">
                    @(isSubmitting ? "Logging In..." : "Log In")
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private UserLoginDto loginModel = new();
    private bool isSubmitting = false;
    private string? errorMessage;
    private class LoginResponse { public string Token { get; set; } }

    private async Task HandleLogin() { /* ... existing code ... */ }
}

@page "/register"
@using RentalHive.Application.DTOs.User
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="flex items-center justify-center min-h-[80vh] bg-gray-50 px-4">
    <div class="max-w-md w-full bg-white p-8 rounded-xl shadow-lg">
        <div class="text-center mb-8">
            <h2 class="text-3xl font-bold text-gray-900">Create an Account</h2>
            <p class="text-gray-600 mt-2">Join RentalHive to start renting and earning.</p>
        </div>

        <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration" formname="register-form">
            <DataAnnotationsValidator />
            <div class="space-y-6">
                <!-- Other input fields -->
                <InputText @bind-Value="registerModel.PersonalIdentityNumber" placeholder="Personal Identity Number" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <InputText @bind-Value="registerModel.FirstName" placeholder="First Name" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                    <InputText @bind-Value="registerModel.LastName" placeholder="Last Name" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                </div>
                <InputText type="email" @bind-Value="registerModel.Email" placeholder="Email Address" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                <InputText @bind-Value="registerModel.PhoneNumber" placeholder="Phone Number" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                <InputText @bind-Value="registerModel.Address" placeholder="Address" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />
                <InputText type="password" @bind-Value="registerModel.Password" placeholder="Password" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm" />

                <!-- Error and Submit Button -->
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md" role="alert"><p>@errorMessage</p></div>
                }
                <button type="submit" disabled="@isSubmitting" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:bg-indigo-400">
                    @(isSubmitting ? "Creating Account..." : "Register")
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private UserRegisterDto registerModel = new();
    private bool isSubmitting = false;
    private string? errorMessage;

    private async Task HandleRegistration()
    {
        isSubmitting = true;
        errorMessage = null;

        try
        {
            var apiUrl = "http://localhost:7123/api/Auth/register";
            var response = await Http.PostAsJsonAsync(apiUrl, registerModel);

            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                errorMessage = string.IsNullOrWhiteSpace(errorContent) ? "Registration failed. Please try again." : errorContent;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
